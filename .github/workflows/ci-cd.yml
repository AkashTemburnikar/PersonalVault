name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore PersonalVault.sln

      - name: Build
        run: dotnet build PersonalVault.sln --configuration Release --no-restore

      - name: Generate Image Tag
        id: tag
        run: echo "TAG=build-$(date +%s)" >> $GITHUB_ENV

#      - name: Docker build
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/personalvaultapi:${{ env.TAG }} -f Dockerfile .
#
#      - name: Docker Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push to Docker Hub
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/personalvaultapi:${{ env.TAG }}
#
#      - name: Azure Login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Get AKS Credentials
#        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
#
#      - name: Set up Helm
#        uses: azure/setup-helm@v3
#
#      - name: Helm deploy to AKS
#        run: |
#          helm upgrade vaultapi ./helm/personalvault-api \
#            --install \
#            --namespace default \
#            --set image.repository=${{ secrets.DOCKER_USERNAME }}/personalvaultapi \
#            --set image.tag=${{ env.TAG }} \
#            --wait